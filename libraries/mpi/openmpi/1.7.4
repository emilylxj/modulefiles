#%Module1.0
#####################################################################
##
## by Salmon
##

conflict mpi/openmpi mpi/mvapich mpi/impi

set helpmsg "The Open MPI Project is an open source MPI-2 implementation. http://www.open-mpi.org/"

proc ModulesHelp { } {
    global helpmsg
    puts stderr  "\t$helpmsg\n"
}

set MODNAME openmpi
set VERSION 1.7.4
set COMPILER gcc-4.4 
setenv MPI_PRG_ENV ${MODNAME}-${VERSION}

#if  [ info exists env(PRG_ENV)  ] {
#   set COMPILER $env(PRG_ENV)
#}
   if {${COMPILER} == $env(PRG_ENV)} {
   set COMPILER gcc
   } else {
    set COMPILER $env(PRG_ENV) 
  }
  

set PREFIX /usr/mpi/${COMPILER}/${MODNAME}-${VERSION}

if [ file isdirectory $PREFIX ] {
} else {
   set PREFIX /pkg/${MODNAME}/${VERSION}/${COMPILER}
} 


if [ file isdirectory $PREFIX ]   {
  prepend-path PATH $PREFIX/bin
  prepend-path LIBRARY_PATH  $PREFIX/lib
  prepend-path LD_LIBRARY_PATH  $PREFIX/lib
  prepend-path INCLUDE  $PREFIX/include
  prepend-path MANPATH  $PREFIX/share/man
  setenv MPI_ROOT $PREFIX
  setenv MPI_DIR  $PREFIX
  setenv MPI_PATH $PREFIX
# setenv OMPI_MCA_btl ^openib
  setenv OMPI_MCA_btl self,sm,openib 
  setenv OMPI_MCA_coll_fca_enable 0

  module-whatis " ${MODNAME}/${VERSION}/${COMPILER} is installed!!"
  set helpmsg " ${MODNAME}/${VERSION}/${COMPILER} is available."

 }  else {
   module-whatis   " $PREFIX is unavailable!!"
   set helpmsg  " $PREFIX is unavailable!!"
   if [ expr [ module-info mode load ] || [ module-info mode display ] ]  {
     puts stderr " ${PREFIX} is unavailable!! "
   }
 }
