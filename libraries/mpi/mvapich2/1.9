#%Module1.0
#####################################################################
##
## by Salmon
##
conflict mpi/openmpi mpi/mvapich2  mpi/impi

prereq compiler

set MODNAME mvapich2
set VERSION 1.9
set COMPILER gcc-4.4

setenv MPI_PRG_ENV ${MODNAME}-${VERSION}

#if  [ info exists env(PRG_ENV)  ] {
#   set COMPILER $env(PRG_ENV)
#}
   if {${COMPILER} == $env(PRG_ENV)} {
   set COMPILER gcc
   } else {
    set COMPILER $env(PRG_ENV) 
  }
  

set PREFIX /usr/mpi/${COMPILER}/${MODNAME}-${VERSION}

if [ file isdirectory $PREFIX ] {
} else {
   set PREFIX /pkg/${MODNAME}/${VERSION}/${COMPILER}
}



if { ![ file isdirectory $PREFIX ] } {

        puts stderr " ${MODNAME}/$env(PRG_ENV) is not installed!! If you need '$env(PRG_ENV)' version $MODNAME, please contect the site manager!"
        module-whatis   " ${MODNAME}/$env(PRG_ENV) is not installed!!"
        break
}

module-whatis   ${MODNAME}/$env(PRG_ENV)
proc ModulesHelp { } {
    global MODNAME
      puts stderr  "${MODNAME}/$env(PRG_ENV) is installed!!"
    return 1
}



prepend-path PATH $PREFIX/bin
prepend-path LIBRARY_PATH  $PREFIX/lib
prepend-path LD_LIBRARY_PATH  $PREFIX/lib
prepend-path INCLUDE  $PREFIX/include
prepend-path MANPATH  $PREFIX/share/man

setenv MPI_ROOT $PREFIX
setenv MPI_DIR  $PREFIX
setenv MPI_PATH $PREFIX
                          
